{"version":3,"sources":["theme/Form.js","selectors/users.js","containers/Users.js"],"names":["Button","styled","button","_templateObject","ButtonSecondary","Link","_templateObject2","Label","label","_templateObject3","Input","input","_templateObject4","props","border","Form","form","_templateObject5","Text","p","_templateObject6","color","users","state","getState","Email","a","AppUsers","moreUsers","getUsers","query","_this","setState","loadAppUsers","match","params","appId","this","user","id","name","email","avatar","react_default","createElement","GlobalStyle","key","href","concat","src","alt","_this2","items","map","renderUser","onClick","Loading","Component","connect","UserSelectors","getLogin","LoginSelectors","dispatch"],"mappings":"o9DAGO,IAAMA,EAASC,IAAOC,OAAVC,KAkBNC,EAAkBH,YAAOI,IAAPJ,CAAHK,KAqBfC,EAAQN,IAAOO,MAAVC,KAULC,EAAQT,IAAOU,MAAVC,IAGJ,SAAAC,GAAK,OAAIA,EAAMC,QAAU,mBAO1BC,EAAOd,IAAOe,KAAVC,KAUJC,EAAOjB,IAAOkB,EAAVC,IACN,SAAAP,GAAK,OAAIA,EAAMQ,OAAS,sICrEpBC,EAFS,SAAAC,GAAK,OAFZ,SAAAA,GAAK,OAAIA,GAAS,GAEFC,CAASD,GAAOD,OAAS,gKCS1D,IAAMG,EAAQxB,IAAOyB,EAAVvB,KA6BLwB,6MAEFJ,MAAQ,CACJK,WAAW,KAqBfC,SAAW,WAEP,IAAMC,EAASC,EAAKR,MAAMK,UAA2B,GAAf,aAEtCG,EAAKC,SAAS,CACVJ,WAAYG,EAAKR,MAAMK,YAG3BG,EAAKlB,MAAMoB,aAAaF,EAAKlB,MAAMqB,MAAMC,OAAOC,MAAON,uFAzBvDO,KAAKxB,MAAMoB,aAAaI,KAAKxB,MAAMqB,MAAMC,OAAOC,MAAO,uCAGhDE,GAAM,IAENC,EAA2BD,EAA3BC,GAAIC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,OAExB,OACIC,EAAAjB,EAAAkB,cAACC,EAAA,EAAD,CAAaC,IAAKP,GACdI,EAAAjB,EAAAkB,cAAA,UAAKJ,GACLG,EAAAjB,EAAAkB,cAACnB,EAAD,CAAOsB,KAAI,UAAAC,OAAYP,IAAUA,GAChCC,GAAUC,EAAAjB,EAAAkB,cAACC,EAAA,EAAD,CAAOI,IAAKP,EAAQQ,IAAKV,sCAkBvC,IAAAW,EAAAd,KAEER,EAAYQ,KAAKxB,MAAjBgB,SAEP,OACIc,EAAAjB,EAAAkB,cAAA,WACID,EAAAjB,EAAAkB,cAACC,EAAA,EAAD,cACChB,GAAYA,EAASuB,MAClBT,EAAAjB,EAAAkB,cAAA,WACID,EAAAjB,EAAAkB,cAACC,EAAA,EAAD,KAAchB,EAASuB,MAAMC,IAAI,SAAAf,GAAI,OAAIa,EAAKG,WAAWhB,MACzDK,EAAAjB,EAAAkB,cAAC7B,EAAA,EAAD,CAAQwC,QAASlB,KAAKR,UACjBQ,KAAKd,MAAMK,UAAY,iBAAmB,eAE1Ce,EAAAjB,EAAAkB,cAACY,EAAA,EAAD,cAjDNC,aAwERC,sBAfS,SAAAnC,GAEpB,MAAO,CACHM,SAAU8B,EAAuBpC,GACjCqC,SAAUC,IAAeD,SAASrC,KAIf,SAACuC,GAExB,MAAO,CACH7B,aAAc,SAACG,EAAON,GAAR,OAAkBgC,EAAS7B,YAAaG,EAAON,OAItD4B,CAA6C/B","file":"static/js/UsersChunk.35a17133.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\n\nexport const Button = styled.button`\n    height: 40px;\n    width: 100%;\n    color: #FFF;\n    border-radius: 3px;\n    background-color: #005E85;\n    margin: 1rem auto 0 auto;\n    border: 0;\n    font-size: .8rem;\n    text-transform: uppercase;\n    max-width: 700px;\n    cursor: pointer;\n    transition: .2s linear;\n    &:hover {\n      background-color: #008dbd;\n    }\n`;\n\nexport const ButtonSecondary = styled(Link)`\n    height: 40px;\n    width: 100%;\n    color: #FFF;\n    border-radius: 3px;\n    background-color: #4d5870;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-decoration: none;\n    font-size: .8rem;\n    text-transform: uppercase;\n    margin-top: 1rem;\n    border: 0;\n    cursor: pointer;\n    transition: .2s linear;\n    &:hover {\n        background-color: #3d4658;\n    }\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    color: #14233c;\n    font-size: 0.8em;\n    margin: 0.5em 0;\n    position: relative;\n    width: 100%;\n`;\n\nexport const Input = styled.input`\n    width: 100%;\n    height: 40px;\n    border: ${props => props.border || '1px solid #ccc'};\n    background-color: #fff;\n    margin-top: 1rem;\n    padding: 0 1rem;\n    border-radius: 3px;\n`;\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 0 auto;\n    background: #FFF;\n    width: 100%;\n    text-align: left;\n`;\n\nexport const Text = styled.p`\n  color: ${props => props.color || '#4d4d4d'};\n  font-size: .8rem;\n`;\n","const getState = state => state || {};\n\nexport const getUsers = state => getState(state).users || {};\n\nexport default {\n    getUsers\n};\n","//@flow\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport styled from 'styled-components';\nimport UserSelectors from '../selectors/users';\nimport LoginSelectors from '../selectors/login';\nimport {loadAppUsers} from '../actions/users';\nimport {Loading} from '../components/Loading';\nimport {Button} from '../theme/Form';\nimport {Image, Title, ContentWrap, ContentItem} from '../theme/GlobalStyle';\n\nconst Email = styled.a`\n    margin: 1rem auto;\n    color: #005E85;\n`;\n\ntype Content = {\n    avatar: string,\n    email: string,\n    id: string,\n    name: string\n}\n\ntype TestProps = {\n    getUsers: {\n        items: Array<Content>,\n        loading: boolean\n    },\n    loadAppUsers: (string, string) => void,\n    match: {\n        params: {\n            appId: string\n        }\n    }\n}\n\ntype TestState = {\n    moreUsers: boolean\n}\n\nclass AppUsers extends Component<TestProps, TestState> {\n\n    state = {\n        moreUsers: false\n    };\n\n    componentDidMount() {\n        this.props.loadAppUsers(this.props.match.params.appId, '');\n    }\n\n    renderUser(user) {\n\n        const {id, name, email, avatar} = user;\n\n        return (\n            <ContentItem key={id}>\n                <h2>{name}</h2>\n                <Email href={`mailto:${email}`}>{email}</Email>\n                {avatar && <Image src={avatar} alt={name}/>}\n            </ContentItem>\n        );\n\n    }\n\n    getUsers = () => {\n\n        const query = !this.state.moreUsers ? '?offset=25' : '';\n\n        this.setState({\n            moreUsers: !this.state.moreUsers\n        });\n\n        this.props.loadAppUsers(this.props.match.params.appId, query);\n\n    }\n\n    render() {\n\n        const {getUsers} = this.props;\n\n        return (\n            <div>\n                <Title>Users</Title>\n                {getUsers && getUsers.items ?\n                    <div>\n                        <ContentWrap>{getUsers.items.map(user => this.renderUser(user))}</ContentWrap>\n                        <Button onClick={this.getUsers}>\n                            {this.state.moreUsers ? 'Previous users' : 'Next users'}\n                        </Button>\n                    </div> : <Loading />}\n            </div>\n        );\n\n    }\n\n}\n\nconst mapStateToProps = state => {\n\n    return {\n        getUsers: UserSelectors.getUsers(state),\n        getLogin: LoginSelectors.getLogin(state)\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n        loadAppUsers: (appId, query) => dispatch(loadAppUsers(appId, query))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppUsers);\n"],"sourceRoot":""}