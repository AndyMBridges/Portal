{"version":3,"sources":["images/loading.svg","constants/api.js","actions/apps.js","reducers/apps.js","actions/users.js","reducers/users.js","helpers/history.js","actions/login.js","reducers/login.js","reducers/index.js","helpers/privateRoute.js","selectors/login.js","selectors/apps.js","actions/updateApp.js","components/Loading.js","theme/Form.js","theme/GlobalStyle.js","containers/Apps.js","containers/Login.js","selectors/users.js","containers/Users.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","API_URL","headerOptions","Content-Type","Accept","Host","actionTypes","APP_LOAD_REQUEST","APP_LOAD_SUCCESS","APP_LOAD_FAILURE","getApp","fetch","concat","method","headers","Object","objectSpread","Authorization","localStorage","getItem","apps","state","arguments","length","undefined","action","type","loading","items","data","error","USERS_LOAD_REQUEST","USERS_LOAD_SUCCESS","USERS_LOAD_FAILURE","getAppUsers","appId","query","url","users","history","createHistory","user","email","password","body","JSON","stringify","expiry","requestOptions","saveToken","token","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","wrap","_context2","prev","next","sent","json","tokenExpiry","exp","setItem","push","t0","stop","this","_x2","apply","clearToken","removeItem","logout","initialState","login","payload","reducers","combineReducers","PrivateRoute","_ref","Component","component","rest","objectWithoutProperties","react_default","createElement","Route","assign","render","props","Redirect","to","pathname","from","location","selectors_login","getState","selectors_apps","UPDATE_APP_REQUEST","UPDATE_APP_SUCCESS","UPDATE_APP_FAILURE","name","LoadingImage","styled","img","_templateObject","Loading","src","LoadingIcon","alt","Button","button","Form_templateObject","ButtonSecondary","Link","_templateObject2","Input","input","_templateObject3","border","Form","form","_templateObject4","Text","_templateObject5","color","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","Title","h1","GlobalStyle_templateObject2","Image","GlobalStyle_templateObject3","ContentWrap","div","GlobalStyle_templateObject4","ContentItem","GlobalStyle_templateObject5","App","loadApp","updateApp","app","_this","id","logo","key","formik_esm","initialValues","validate","values","errors","onSubmit","updateClick","handleChange","handleBlur","handleSubmit","onChange","onBlur","value","placeholder","_this2","getApps","map","renderApp","Loading_Loading","connect","AppSelectors","getLogin","LoginSelectors","_callee","_context","_x","Label","label","Login_templateObject","LoginPage","Login_templateObject2","Login","className","isLoggedIn","goToApp","test","isSubmitting","disabled","accessToken","selectors_users","Email","Users_templateObject","AppUsers","moreUsers","getUsers","setState","loadAppUsers","match","params","avatar","href","renderUser","onClick","UserSelectors","Logout","Header_templateObject","Head","header","Header_templateObject2","Menu","Header_templateObject3","MenuLink","Header_templateObject4","Header","handleLogout","Router","components_Header","Switch","privateRoute_PrivateRoute","exact","path","Apps","Users","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","d","__webpack_exports__","src_store","persistor","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","parseInt","Math","floor","Date","now","clear","thunk","persistStore","ReactDOM","es","integration_react","src_App","document","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.42195971.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.a516b9f8.svg\";","export const API_URL = 'https://guarded-thicket-22918.herokuapp.com';\n\nexport const headerOptions = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n    'Host': API_URL\n};\n","import {API_URL, headerOptions} from '../constants/api';\n\nexport const actionTypes = {\n    APP_LOAD_REQUEST: 'APP_LOAD_REQUEST',\n    APP_LOAD_SUCCESS: 'APP_LOAD_SUCCESS',\n    APP_LOAD_FAILURE: 'APP_LOAD_FAILURE'\n};\n\nconst requestOptions = ()  => ({\n    method: 'GET',\n    headers: {\n        ...headerOptions,\n        'Authorization': localStorage.getItem('token')\n    }\n});\n\nconst getApp = () => fetch(`${API_URL}/apps`, requestOptions());\n\nexport function loadApp(dispatch) {\n\n    return async dispatch => {\n\n        dispatch({type: actionTypes.APP_LOAD_REQUEST});\n\n        try {\n            const response = await getApp();\n            const data = await response.json();\n\n            dispatch({\n                data: data.apps,\n                type: actionTypes.APP_LOAD_SUCCESS\n            });\n\n        } catch (error) {\n            dispatch({\n                error,\n                type: actionTypes.APP_LOAD_FAILURE\n            });\n        }\n\n    };\n};\n","import {actionTypes} from '../actions/apps';\n\nconst apps = (state = {}, action) => {\n    switch (action.type) {\n        case actionTypes.APP_LOAD_REQUEST :\n            return {\n                ...state,\n                loading: true\n            };\n        case actionTypes.APP_LOAD_SUCCESS :\n            return {\n                items: action.data,\n                loading: false\n            };\n        case actionTypes.APP_LOAD_FAILURE :\n            return {\n                error: action.error\n            };\n        default:\n            return state;\n    }\n};\n\nexport default apps;\n","import {API_URL, headerOptions} from '../constants/api';\n\nexport const actionTypes = {\n    USERS_LOAD_REQUEST: 'USERS_LOAD_REQUEST',\n    USERS_LOAD_SUCCESS: 'USERS_LOAD_SUCCESS',\n    USERS_LOAD_FAILURE: 'USERS_LOAD_FAILURE'\n};\n\nconst requestOptions = () => ({\n    method: 'GET',\n    headers: {\n        ...headerOptions,\n        'Authorization': localStorage.getItem('token')\n    }\n});\n\nconst getAppUsers = (appId, query) => {\n\n    const url = query === undefined ? `${API_URL}/apps/${appId}/users` :\n        `${API_URL}/apps/${appId}/users${query}`;\n\n    return fetch(url, requestOptions());\n\n};\n\nexport function loadAppUsers(appId, query) {\n\n    return async dispatch => {\n\n        dispatch({type: actionTypes.USERS_LOAD_REQUEST});\n\n        try {\n            const response = await getAppUsers(appId, query);\n            const data = await response.json();\n\n            dispatch({\n                data: data.users,\n                type: actionTypes.USERS_LOAD_SUCCESS\n            });\n\n        } catch (error) {\n            dispatch({\n                error,\n                type: actionTypes.USERS_LOAD_FAILURE\n            });\n        }\n\n    };\n};\n","import {actionTypes} from '../actions/users';\n\nconst users = (state = {}, action) => {\n    switch (action.type) {\n        case actionTypes.USERS_LOAD_REQUEST :\n            return {\n                ...state,\n                loading: true\n            };\n        case actionTypes.USERS_LOAD_SUCCESS :\n            return {\n                items: action.data,\n                loading: false\n            };\n        case actionTypes.USERS_LOAD_FAILURE :\n            return {\n                error: action.error\n            };\n        default:\n            return state;\n    }\n};\n\nexport default users;\n","import createHistory from 'history/createBrowserHistory';\n\nexport const history = createHistory();\n","import {API_URL, headerOptions} from '../constants/api';\nimport {history} from '../helpers/history';\n\nexport const actionTypes = {\n    LOGIN_REQUEST: 'LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'LOGIN_FAILURE',\n    CLEAR_TOKEN: 'CLEAR_TOKEN'\n};\n\nconst requestOptions = user => {\n\n    const {email, password} = user;\n\n    return {\n        method: 'POST',\n        body: JSON.stringify({\n            email,\n            password,\n            expiry: '180s'\n        }),\n        headers: headerOptions\n    };\n};\n\nconst getApp = user => fetch(`${API_URL}/login`, requestOptions(user));\n\nexport const login = user => {\n    return async dispatch => {\n\n        dispatch({\n            type: actionTypes.LOGIN_REQUEST,\n            data: user\n        });\n\n        try {\n            const response = await getApp(user);\n            const data = await response.json();\n\n            if (!data.accessToken || data.error) {\n                dispatch({\n                    type: actionTypes.LOGIN_FAILURE,\n                    error: data.error\n                });\n            } else {\n                dispatch(saveToken(data.accessToken));\n            }\n        } catch (error) {\n            dispatch({\n                type: actionTypes.LOGIN_FAILURE,\n                error\n            });\n        }\n    };\n};\n\nexport const saveToken = token => {\n    return async dispatch => {\n\n        try {\n\n            const response = await fetch(`${API_URL}/`, {\n                method: 'GET',\n                headers: {\n                    ...headerOptions,\n                    'Authorization': token\n                }\n            });\n\n            const data = await response.json();\n\n            dispatch({\n                type: actionTypes.LOGIN_SUCCESS,\n                token,\n                tokenExpiry: data.token.exp\n            });\n            localStorage.setItem('token', token);\n            localStorage.setItem('tokenExpiry', data.token.exp);\n            history.push('/apps');\n\n        } catch (error) {\n            dispatch({\n                type: actionTypes.LOGIN_FAILURE,\n                error\n            });\n        }\n    };\n};\n\nexport const clearToken = dispatch => {\n    history.push('/');\n    localStorage.removeItem('token');\n    localStorage.removeItem('tokenExpiry');\n    dispatch({\n        type: actionTypes.CLEAR_TOKEN\n    });\n};\n\nexport const logout = () => {\n    return dispatch => {\n        clearToken(dispatch);\n    };\n};\n","\nimport {actionTypes} from '../actions/login';\n\nconst initialState = {\n    token: null,\n    tokenExpiry: null\n};\n\nconst login = (state = {payload: initialState}, action) => {\n    switch (action.type) {\n        case actionTypes.LOGIN_REQUEST:\n            return {\n                ...state,\n                loading: true\n            };\n        case actionTypes.LOGIN_SUCCESS:\n            return {\n                ...state,\n                payload: {\n                    token: action.token,\n                    tokenExpiry: action.tokenExpiry\n                },\n                loading: false\n            };\n        case actionTypes.LOGIN_FAILURE:\n            return {\n                ...state,\n                error: action.error,\n                loading: false\n            };\n        case actionTypes.CLEAR_TOKEN:\n            return {\n                payload: initialState\n            };\n        default:\n            return state;\n    }\n};\n\nexport default login;\n","import {combineReducers} from 'redux';\n\nimport apps from './apps';\nimport users from './users';\nimport login from './login';\n\nconst reducers = combineReducers({\n    apps,\n    users,\n    login\n});\n\nexport default reducers;\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nexport const PrivateRoute = ({component: Component, ...rest}) => (\n    <Route {...rest} render={props => (\n        localStorage.getItem('token') ?\n            <Component {...props} /> :\n            <Redirect to={{pathname: '/', state: {from: props.location}}} />\n    )} />\n);\n","const getState = state => state || {};\n\nexport const getLogin = state => getState(state).login || {};\n\nexport default {\n    getLogin\n};\n","const getState = state => state || {};\n\nexport const getApps = state => getState(state).apps || {};\n\nexport default {\n    getApps\n};\n","import {API_URL, headerOptions} from '../constants/api';\n\nexport const actionTypes = {\n    UPDATE_APP_REQUEST: 'UPDATE_APP_REQUEST',\n    UPDATE_APP_SUCCESS: 'UPDATE_APP_SUCCESS',\n    UPDATE_APP_FAILURE: 'UPDATE_APP_FAILURE'\n};\n\nconst requestOptions = name => ({\n    method: 'PUT',\n    body: JSON.stringify({'name': name}),\n    headers: {\n        ...headerOptions,\n        'Authorization': localStorage.getItem('token')\n    }\n});\n\nconst getApp = (appId, name) => fetch(`${API_URL}/apps/${appId}`, requestOptions(name));\n\nexport function updateApp(appId, name) {\n    return async dispatch => {\n\n        dispatch({type: actionTypes.UPDATE_APP_REQUEST});\n\n        try {\n            const response = await getApp(appId, name);\n            const data = await response.json();\n\n            dispatch({\n                data,\n                type: actionTypes.UPDATE_APP_SUCCESS\n            });\n\n        } catch (error) {\n            dispatch({\n                error,\n                type: actionTypes.UPDATE_APP_FAILURE\n            });\n        }\n    };\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport LoadingIcon from '../images/loading.svg';\n\nconst LoadingImage = styled.img`\n    margin: 0 auto;\n`;\n\nexport const Loading = () => {\n\n    return <LoadingImage src={LoadingIcon} alt='Loading' />;\n\n};\n","import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\n\nexport const Button = styled.button`\n    height: 40px;\n    width: 100%;\n    color: #FFF;\n    border-radius: 3px;\n    background-color: #005E85;\n    margin: 1rem auto 0 auto;\n    border: 0;\n    font-size: .8rem;\n    text-transform: uppercase;\n    cursor: pointer;\n    max-width: 600px;\n    transition: .2s linear;\n    &:hover {\n      background-color: #008dbd;\n    }\n`;\n\nexport const ButtonSecondary = styled(Link)`\n    height: 40px;\n    width: 100%;\n    color: #FFF;\n    border-radius: 3px;\n    background-color: #4d5870;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-decoration: none;\n    font-size: .8rem;\n    text-transform: uppercase;\n    margin-top: 1rem;\n    border: 0;\n    cursor: pointer;\n    transition: .2s linear;\n    &:hover {\n        background-color: #3d4658;\n    }\n`;\n\nexport const Input = styled.input`\n    width: 100%;\n    height: 40px;\n    border: ${props => props.border || '1px solid #ccc'};\n    background-color: #fff;\n    margin-top: 1rem;\n    padding: 0 1rem;\n    border-radius: 3px;\n`;\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 0 auto;\n    background: #FFF;\n    width: 100%;\n    text-align: left;\n`;\n\nexport const Text = styled.p`\n  color: ${props => props.color || '#4d4d4d'};\n  font-size: .8rem;\n`;\n","import styled, {createGlobalStyle} from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n\n    * {\n        box-sizing: border-box;\n    }\n\n    body {\n        background: #14233c;\n        margin: 0;\n        padding: 0;\n        font-family: Helvetica Neue,Helvetica,Arial,sans-serif; \n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n\n        h1, h2 {\n            margin: 0 auto 1rem auto;\n            color: #14233c;\n            text-align: center;\n            text-transform: uppercase;\n        }\n\n        h2 {\n            margin: 1rem 0 0;\n        }\n\n        .wrapper {\n            margin: 0 auto;\n            max-width: 1100px;\n        }\n\n        .main {\n            padding: 2rem;\n            text-align: center;\n        }\n    }`\n;\n\nexport const Title = styled.h1`\n    text-align:center;\n    color: #FFF;\n    margin-bottom: 1rem;\n    text-transform: uppercase;\n`;\n\nexport const Image = styled.img`\n    margin: 0 auto;\n    width: 100%;\n`;\n\nexport const ContentWrap = styled.div`\n    display: grid;\n    grid-template-columns: 100%;\n\n    @media (min-width: 768px) {\n        grid-template-columns: 50% 50%;\n    }\n    @media (min-width: 1024px) {\n        grid-template-columns: 33% 33% 33%;\n    }\n`;\n\nexport const ContentItem = styled.div`\n    background-color: #FFF;\n    border-radius: 3px; \n    display: grid;\n    padding: 1rem;\n    text-align: center;\n    max-width: 100%;\n    margin: 1rem 0;\n    @media (min-width: 768px) {\n        margin: 1rem;\n    }\n`;\n","//@flow\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Formik} from 'formik';\nimport AppSelectors from '../selectors/apps';\nimport LoginSelectors from '../selectors/login';\nimport {loadApp} from '../actions/apps';\nimport {updateApp} from '../actions/updateApp';\nimport {Loading} from '../components/Loading';\nimport {Button, ButtonSecondary, Input, Form, Text} from '../theme/Form';\nimport {Image, Title, ContentWrap, ContentItem} from '../theme/GlobalStyle';\n\ntype Content = {\n    created: string,\n    id: string,\n    logo: string,\n    name: string\n}\n\ntype TestProps = {\n    getApps: {\n        items: Array<Content>,\n        loading: boolean\n    },\n    loadApp: () => void,\n    updateApp: (string, string) => void\n}\n\nclass App extends Component<TestProps> {\n\n    componentDidMount() {\n        this.props.loadApp();\n    }\n\n    updateClick(appId, name) {\n        this.props.updateApp(appId, name);\n        this.props.loadApp();\n    }\n\n    renderApp(app) {\n\n        const {id, logo, name} = app;\n\n        return (\n            <ContentItem key={id}>\n                {logo && <Image src={logo} alt={name} />}\n                {name && <h2>{name}</h2>}\n                <Formik\n                    initialValues={{name: ''}}\n                    validate={values => {\n                        let errors = {};\n\n                        if (!values.name) {\n                            errors.name = 'Enter new app name';\n                        }\n                        return errors;\n\n                    }}\n                    onSubmit={values => {\n                        this.updateClick(id, values.name);\n                    }}\n                    render={({\n                        errors,\n                        values,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit\n                    }) => (\n                        <Form onSubmit={handleSubmit}>\n                            <Input\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.name}\n                                border={errors.name && '1px solid red'}\n                                type=\"text\"\n                                name=\"name\"\n                                placeholder=\"Update app name\"\n                            />\n                            {errors.name && <Text color=\"red\">{errors.name}</Text>}\n                            <Button type=\"submit\">Update app name</Button>\n                        </Form>\n                    )}\n                />\n                <ButtonSecondary to={`/apps/${id}`}>View app users</ButtonSecondary>\n            </ContentItem>\n        );\n    }\n\n    render() {\n\n        const {getApps} = this.props;\n\n        return (\n            <div>\n                <Title>Apps</Title>\n                {getApps && getApps.items ?\n                    <ContentWrap>{getApps.items.map(app => this.renderApp(app))}</ContentWrap> : <Loading />}\n            </div>\n        );\n\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        getApps: AppSelectors.getApps(state),\n        getLogin: LoginSelectors.getLogin(state)\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    loadApp: () => dispatch(loadApp(dispatch)),\n    updateApp: (appId, name) => dispatch(updateApp(appId, name))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","//@flow\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport styled from 'styled-components';\nimport {Formik} from 'formik';\nimport {login, logout} from '../actions/login';\nimport LoginSelectors from '../selectors/login';\nimport {Button, ButtonSecondary, Input, Form, Text} from '../theme/Form';\n\nconst Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    color: #14233c;\n    font-size: 0.8em;\n    margin: 0.5em 0;\n    position: relative;\n    width: 100%;\n`;\n\nconst LoginPage = styled.div`\n    background: #FFF;\n    margin: 0 auto;\n    max-width: 360px;\n    width: 100%;\n    padding: 2rem;\n    border-radius: 3px;\n`;\n\ntype TestProps = {\n    login: ({email: string, password: string}) => void,\n    getLogin: {\n        payload: {\n            token: string\n        },\n        error?: string\n    }\n}\n\nclass Login extends Component<TestProps> {\n\n    goToApp() {\n        return (\n            <div className=\"goToApp\">\n                <p>Already logged in</p>\n                <ButtonSecondary to=\"/apps\">Go to app</ButtonSecondary>\n            </div>\n        );\n    }\n\n    render() {\n\n        const isLoggedIn = !this.props.getLogin.payload || this.props.getLogin.payload.token === null ?\n            false : true;\n\n        return (\n            <LoginPage className=\"login\">\n                <h1>Login</h1>\n                {!isLoggedIn ? <Formik\n                    initialValues={{email: '', password: ''}}\n                    validate={values => {\n\n                        let errors = {};\n                        let regex = /\\S+@\\S+\\.\\S+/;\n\n                        if (!values.email) {\n                            errors.email = 'Email is required';\n                        } else if (!regex.test(values.email)) {\n                            errors.email = 'Invalid email address';\n                        }\n                        if (!values.password) {\n                            errors.password = 'A password is required';\n                        } else if (values.password.length < 4) {\n                            errors.password = 'Password must be 4 characters';\n                        }\n\n                        return errors;\n\n                    }}\n                    onSubmit={values => {\n                        this.props.login(values);\n\n                    }}\n                    render={({\n                        isSubmitting,\n                        errors,\n                        values,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit\n                    }) => (\n                        <Form onSubmit={handleSubmit}>\n                            <Label>\n                            Email *\n                                <Input\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.email}\n                                    border={errors.email && '1px solid red'}\n                                    type=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"Email\"\n                                />\n                                {errors.email && <Text color=\"red\">{errors.email}</Text>}\n                            </Label>\n                            <Label>\n                            Password *\n                                <Input\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.password}\n                                    border={errors.password && '1px solid red'}\n                                    type=\"password\"\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                />\n                                {errors.password && <Text color=\"red\">{errors.password}</Text>}\n                            </Label>\n                            <Button\n                                disabled={errors.email || errors.password}\n                                type=\"submit\">Submit</Button>\n                            {this.props.getLogin.error && <Text color=\"red\">Incorrect details</Text>}\n                        </Form>\n                    )}\n                /> : this.goToApp()}\n            </LoginPage>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        getLogin: LoginSelectors.getLogin(state)\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    login: user => dispatch(login(user)),\n    logout: () => dispatch(logout())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","const getState = state => state || {};\n\nexport const getUsers = state => getState(state).users || {};\n\nexport default {\n    getUsers\n};\n","//@flow\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport styled from 'styled-components';\nimport UserSelectors from '../selectors/users';\nimport LoginSelectors from '../selectors/login';\nimport {loadAppUsers} from '../actions/users';\nimport {Loading} from '../components/Loading';\nimport {Button} from '../theme/Form';\nimport {Image, Title, ContentWrap, ContentItem} from '../theme/GlobalStyle';\n\nconst Email = styled.a`\n    margin: 1rem auto;\n    color: #00a0d6;\n`;\n\ntype Content = {\n    avatar: string,\n    email: string,\n    id: string,\n    name: string\n}\n\ntype TestProps = {\n    getUsers: {\n        items: Array<Content>,\n        loading: boolean\n    },\n    loadAppUsers: (string, string) => void,\n    match: {\n        params: {\n            appId: string\n        }\n    }\n}\n\ntype TestState = {\n    moreUsers: boolean\n}\n\nclass AppUsers extends Component<TestProps, TestState> {\n\n    state = {\n        moreUsers: false\n    };\n\n    componentDidMount() {\n        this.props.loadAppUsers(this.props.match.params.appId, '');\n    }\n\n    renderUser(user) {\n\n        const {id, name, email, avatar} = user;\n\n        return (\n            <ContentItem key={id}>\n                <h2>{name}</h2>\n                <Email href={`mailto:${email}`}>{email}</Email>\n                {avatar && <Image src={avatar} alt={name}/>}\n            </ContentItem>\n        );\n\n    }\n\n    getUsers = () => {\n\n        const query = !this.state.moreUsers ? '?offset=25' : '';\n\n        this.setState({\n            moreUsers: !this.state.moreUsers\n        });\n\n        this.props.loadAppUsers(this.props.match.params.appId, query);\n\n    }\n\n    render() {\n\n        const {getUsers} = this.props;\n\n        return (\n            <div>\n                <Title>Users</Title>\n                {getUsers && getUsers.items ? (\n                    <div>\n                        <ContentWrap>{getUsers.items.map(user => this.renderUser(user))}</ContentWrap>\n                        <Button onClick={this.getUsers}>\n                            {this.state.moreUsers ? 'Previous users' : 'Next users'}\n                        </Button>\n                    </div>\n                ) : <Loading />}\n            </div>\n        );\n\n    }\n\n}\n\nconst mapStateToProps = state => {\n\n    return {\n        getUsers: UserSelectors.getUsers(state),\n        getLogin: LoginSelectors.getLogin(state)\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n        loadAppUsers: (appId, query) => dispatch(loadAppUsers(appId, query))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppUsers);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Logout = styled.button`\n    height: 40px;\n    padding: 0 1rem;\n    font-size: .8rem;\n    text-transform: uppercase;\n    color: #FFF;\n    border-radius: 3px;\n    background-color: #00a0d6;\n    border: 0;\n    cursor: pointer;\n    transition: .2s linear;\n    &:hover {\n        background-color: #008dbd;\n    }\n`;\n\nconst Head = styled.header`\n    padding: 2rem;\n    text-align: right;\n    display: flex;\n    justify-content: space-between;\n    @media (min-width: 768px) {\n        margin: 0 1rem;\n    }\n`;\n\nconst Menu = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst MenuLink = styled(Link)`\n    color: #FFF;\n    transition: .2s linear;\n    &:hover {\n        color: #00a0d6;\n    }\n    &:first-child {\n        margin-right: 1rem;\n    }\n`;\n\nconst Header = ({logout}) => {\n\n    return (\n        <Head>\n            <Menu>\n                <MenuLink to=\"/\">Home</MenuLink>\n                <MenuLink to=\"/apps\">Apps</MenuLink>\n            </Menu>\n            <Logout onClick={logout}>Logout</Logout>\n        </Head>\n    );\n\n};\n\nexport default Header;\n","//@flow\nimport React, {Component} from 'react';\nimport {Switch, Router, Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {history} from './helpers/history';\nimport {PrivateRoute} from './helpers/privateRoute';\nimport {logout} from './actions/login';\nimport LoginSelectors from './selectors/login';\n\nimport Apps from './containers/Apps';\nimport Login from './containers/Login';\nimport Users from './containers/Users';\nimport Header from './components/Header';\n\nimport {GlobalStyle} from './theme/GlobalStyle';\n\ntype TestProps = {\n    logout: () => void,\n    getLogin: {\n        payload: {\n            token: string\n        },\n        error?: string\n    }\n}\n\nclass App extends Component<TestProps> {\n\n    handleLogout = () => {\n        this.props.logout();\n    }\n\n    render() {\n\n        const isLoggedIn = !this.props.getLogin.payload || this.props.getLogin.payload.token === null ?\n            false : true;\n\n        return (\n            <div className=\"wrapper\">\n                <GlobalStyle />\n                <Router history={history}>\n                    <div>\n                        {isLoggedIn && <Header logout={this.handleLogout}/>}\n                        <div className=\"main\">\n                            <Switch>\n                                <PrivateRoute exact path=\"/apps\" component={Apps} />\n                                <PrivateRoute path=\"/apps/:appId\" component={Users} />\n                                <Route path=\"/\" component={Login} />\n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n\n    return {\n        getLogin: LoginSelectors.getLogin(state)\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    logout: () => dispatch(logout())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {persistReducer, persistStore} from 'redux-persist';\nimport {PersistGate} from 'redux-persist/integration/react';\nimport storage from 'redux-persist/es/storage';\nimport reducers from './reducers/index';\nimport {clearToken} from './actions/login';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst persistConfig = {\n    key: 'root',\n    storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nconst tokenMiddleware = store => next => action => {\n    const tokenExpiry = localStorage.getItem('tokenExpiry');\n\n    if (parseInt(tokenExpiry) < Math.floor(Date.now() / 1000)) {\n        localStorage.clear();\n        store.dispatch(clearToken);\n        next(action);\n    }\n    next(action);\n};\n\nexport const store = createStore(persistedReducer, composeEnhancers(\n    applyMiddleware(tokenMiddleware, thunk)\n));\n\nexport const persistor = persistStore(store);\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}