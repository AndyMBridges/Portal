{"version":3,"sources":["theme/Form.js","containers/Login.js"],"names":["Button","styled","button","_templateObject","ButtonSecondary","Link","_templateObject2","Label","label","_templateObject3","Input","input","_templateObject4","props","border","Form","form","_templateObject5","Text","p","_templateObject6","color","LoginPage","div","Login","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","_theme_Form__WEBPACK_IMPORTED_MODULE_12__","to","_this","this","isLoggedIn","getLogin","payload","token","goToApp","formik__WEBPACK_IMPORTED_MODULE_9__","initialValues","email","password","validate","values","errors","test","length","onSubmit","login","render","_ref","isSubmitting","handleChange","handleBlur","handleSubmit","onChange","onBlur","value","type","name","placeholder","disabled","error","Component","connect","state","LoginSelectors","dispatch","user","logout"],"mappings":"o9DAGO,IAAMA,EAASC,IAAOC,OAAVC,KAkBNC,EAAkBH,YAAOI,IAAPJ,CAAHK,KAqBfC,EAAQN,IAAOO,MAAVC,KAULC,EAAQT,IAAOU,MAAVC,IAGJ,SAAAC,GAAK,OAAIA,EAAMC,QAAU,mBAO1BC,EAAOd,IAAOe,KAAVC,KAUJC,EAAOjB,IAAOkB,EAAVC,IACN,SAAAP,GAAK,OAAIA,EAAMQ,OAAS,+WChEnC,IAAMC,EAAYrB,IAAOsB,IAAVpB,KAmBTqB,oLAGE,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,GAAG,SAApB,+CAKH,IAAAC,EAAAC,KAECC,KAAcD,KAAKnB,MAAMqB,SAASC,SAAiD,OAAtCH,KAAKnB,MAAMqB,SAASC,QAAQC,OAG/E,OACIX,EAAAC,EAAAC,cAACL,EAAD,CAAWM,UAAU,SACjBH,EAAAC,EAAAC,cAAA,mBACEM,EAkEGD,KAAKK,UAlEKZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACXC,cAAe,CAACC,MAAO,GAAIC,SAAU,IACrCC,SAAU,SAAAC,GAEN,IAAIC,EAAS,GAcb,OAXKD,EAAOH,MAFA,eAIMK,KAAKF,EAAOH,SAC1BI,EAAOJ,MAAQ,yBAFfI,EAAOJ,MAAQ,oBAIdG,EAAOF,SAEDE,EAAOF,SAASK,OAAS,IAChCF,EAAOH,SAAW,iCAFlBG,EAAOH,SAAW,yBAKfG,GAGXG,SAAU,SAAAJ,GACNZ,EAAKlB,MAAMmC,MAAML,IAGrBM,OAAQ,SAAAC,KACJC,aADI,IAEJP,EAFIM,EAEJN,OACAD,EAHIO,EAGJP,OACAS,EAJIF,EAIJE,aACAC,EALIH,EAKJG,WACAC,EANIJ,EAMJI,aANI,OAQJ7B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMkB,SAAUO,GACZ7B,EAAAC,EAAAC,cAACE,EAAA,EAAD,eAEIJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACI0B,SAAUH,EACVI,OAAQH,EACRI,MAAOd,EAAOH,MACd1B,OAAQ8B,EAAOJ,OAAS,gBACxBkB,KAAK,QACLC,KAAK,QACLC,YAAY,UAEfhB,EAAOJ,OAASf,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMR,MAAM,OAAOuB,EAAOJ,QAE/Cf,EAAAC,EAAAC,cAACE,EAAA,EAAD,kBAEIJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACI0B,SAAUH,EACVI,OAAQH,EACRI,MAAOd,EAAOF,SACd3B,OAAQ8B,EAAOH,UAAY,gBAC3BiB,KAAK,WACLC,KAAK,WACLC,YAAY,aAEfhB,EAAOH,UAAYhB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMR,MAAM,OAAOuB,EAAOH,WAElDhB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIgC,SAAUjB,EAAOJ,OAASI,EAAOH,SACjCiB,KAAK,UAFT,UAGC3B,EAAKlB,MAAMqB,SAAS4B,OAASrC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMR,MAAM,OAAZ,iCAlFtC0C,aAsGLC,sBAXS,SAAAC,GACpB,MAAO,CACH/B,SAAUgC,IAAehC,SAAS+B,KAIf,SAAAE,GAAQ,MAAK,CACpCnB,MAAO,SAAAoB,GAAI,OAAID,EAASnB,YAAMoB,KAC9BC,OAAQ,kBAAMF,EAASE,kBAGZL,CAA6CxC","file":"static/js/LoginChunk.555ecac2.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\n\nexport const Button = styled.button`\n    height: 40px;\n    width: 100%;\n    color: #FFF;\n    border-radius: 3px;\n    background-color: #005E85;\n    margin: 1rem auto 0 auto;\n    border: 0;\n    font-size: .8rem;\n    text-transform: uppercase;\n    max-width: 700px;\n    cursor: pointer;\n    transition: .2s linear;\n    &:hover {\n      background-color: #008dbd;\n    }\n`;\n\nexport const ButtonSecondary = styled(Link)`\n    height: 40px;\n    width: 100%;\n    color: #FFF;\n    border-radius: 3px;\n    background-color: #4d5870;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-decoration: none;\n    font-size: .8rem;\n    text-transform: uppercase;\n    margin-top: 1rem;\n    border: 0;\n    cursor: pointer;\n    transition: .2s linear;\n    &:hover {\n        background-color: #3d4658;\n    }\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    color: #14233c;\n    font-size: 0.8em;\n    margin: 0.5em 0;\n    position: relative;\n    width: 100%;\n`;\n\nexport const Input = styled.input`\n    width: 100%;\n    height: 40px;\n    border: ${props => props.border || '1px solid #ccc'};\n    background-color: #fff;\n    margin-top: 1rem;\n    padding: 0 1rem;\n    border-radius: 3px;\n`;\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 0 auto;\n    background: #FFF;\n    width: 100%;\n    text-align: left;\n`;\n\nexport const Text = styled.p`\n  color: ${props => props.color || '#4d4d4d'};\n  font-size: .8rem;\n`;\n","//@flow\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport styled from 'styled-components';\nimport {Formik} from 'formik';\nimport {login, logout} from '../actions/login';\nimport LoginSelectors from '../selectors/login';\nimport {Button, ButtonSecondary, Input, Form, Text, Label} from '../theme/Form';\n\nconst LoginPage = styled.div`\n    background: #FFF;\n    margin: 0 auto;\n    max-width: 360px;\n    width: 100%;\n    padding: 2rem;\n    border-radius: 3px;\n`;\n\ntype TestProps = {\n    login: ({email: string, password: string}) => void,\n    getLogin: {\n        payload: {\n            token: string\n        },\n        error?: string\n    }\n}\n\nclass Login extends Component<TestProps> {\n\n    goToApp() {\n        return (\n            <div className=\"goToApp\">\n                <p>Already logged in</p>\n                <ButtonSecondary to=\"/apps\">Go to app</ButtonSecondary>\n            </div>\n        );\n    }\n\n    render() {\n\n        const isLoggedIn = !this.props.getLogin.payload || this.props.getLogin.payload.token === null ?\n            false : true;\n\n        return (\n            <LoginPage className=\"login\">\n                <h1>Login</h1>\n                {!isLoggedIn ? <Formik\n                    initialValues={{email: '', password: ''}}\n                    validate={values => {\n\n                        let errors = {};\n                        let regex = /\\S+@\\S+\\.\\S+/;\n\n                        if (!values.email) {\n                            errors.email = 'Email is required';\n                        } else if (!regex.test(values.email)) {\n                            errors.email = 'Invalid email address';\n                        }\n                        if (!values.password) {\n                            errors.password = 'A password is required';\n                        } else if (values.password.length < 4) {\n                            errors.password = 'Password must be 4 characters';\n                        }\n\n                        return errors;\n\n                    }}\n                    onSubmit={values => {\n                        this.props.login(values);\n\n                    }}\n                    render={({\n                        isSubmitting,\n                        errors,\n                        values,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit\n                    }) => (\n                        <Form onSubmit={handleSubmit}>\n                            <Label>\n                            Email *\n                                <Input\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.email}\n                                    border={errors.email && '1px solid red'}\n                                    type=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"Email\"\n                                />\n                                {errors.email && <Text color=\"red\">{errors.email}</Text>}\n                            </Label>\n                            <Label>\n                            Password *\n                                <Input\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.password}\n                                    border={errors.password && '1px solid red'}\n                                    type=\"password\"\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                />\n                                {errors.password && <Text color=\"red\">{errors.password}</Text>}\n                            </Label>\n                            <Button\n                                disabled={errors.email || errors.password}\n                                type=\"submit\">Submit</Button>\n                            {this.props.getLogin.error && <Text color=\"red\">Incorrect details</Text>}\n                        </Form>\n                    )}\n                /> : this.goToApp()}\n            </LoginPage>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        getLogin: LoginSelectors.getLogin(state)\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    login: user => dispatch(login(user)),\n    logout: () => dispatch(logout())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"],"sourceRoot":""}